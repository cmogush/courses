//Created by Christopher Mogush

public class findGenes {
    public void test(){
    String dna1 = "aATgTCACtagCaTAaAtgCCCTGAa";
    fineAllGenes(dna1);
    }
    
    public String fineAllGenes(String dna){
    String gene = "";
    int geneCount = 1;
    System.out.println("DNA strand is: " + dna);
    while (gene != "n/a"){
        gene = findSimpleGene(dna);
        if(dna.indexOf(gene) == -1){
        break;
        }
        String newDNA = dna.substring(dna.indexOf(gene) + gene.length());
        System.out.println("Gene # " + geneCount + " is: " + gene);
        dna = newDNA;
        geneCount = geneCount + 1;
    }
    return gene;
    }
    
    public String findSimpleGene(String dna){
        String upDNA = dna.toUpperCase();//convert to caps
        String gene = "";
        int startIndex = upDNA.indexOf("ATG"); // gets start index #      
        int stopIndex = 0;
        String check = "not divisible by 3";
        int currIndex = startIndex + 3;
        while (check == "not divisible by 3"){
            if (startIndex == -1 || stopIndex == -1){
            return "n/a";
            }
        String stopCodon = determineStopCodon(upDNA, currIndex);
        stopIndex = upDNA.indexOf(stopCodon, startIndex + 3); //looks for stop codon after start index
        gene = dna.substring(startIndex, stopIndex + 3);
        if(gene.length() % 3 == 0){
                check = "ok";
            }
        else{
                currIndex = currIndex + 1;
            }
        }
     
    return gene;
    }
    
    public String determineStopCodon(String dna, int startIndex){
    int TAA = dna.indexOf("TAA", startIndex + 3);
    int TAG = dna.indexOf("TAG", startIndex + 3);
    int TGA = dna.indexOf("TGA", startIndex + 3);
    int stopCodon = (compareTwoVariables(compareTwoVariables(TAA, TAG),TGA));
    if(TAA == stopCodon){
        return "TAA";
    }
    if(TAG == stopCodon){
        return "TAG";
    }
    if(TGA == stopCodon){
        return "TGA";
    }
    return "error";
    } 
    
    public int compareTwoVariables(int var1, int var2){
        int min = 0;
        if(var1 != -1 && var2 != -1){
            min = Math.min(var1, var2);
        }
        else {
            min = -1;
        }
        if(var1 != -1 && var2 == -1){
            min = var1;
        }
        if(var1 == -1 && var2 != -1){
            min = var2;
        }
    return min;
    }
}
